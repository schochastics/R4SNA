# Introduction

```{r}
#| label: libs
#| message: false
library(igraph)
library(ggraph)
```

# Which package to choose?

I will discuss some other packages here and motivate why I would recommend `igraph` as the goto package for standard network analytic tasks.

Besides methods, `igraph` also provides data structures which facilitate to store and process network data. Two other packages 
that allow for this are `graph` and `network`. The former is, however, not available on CRAN anymore, only via
Bioconductor. The latter provides the foundation for much of the statistical modelling aspects for networks such as
Exponential Random Graph Models (ERGMs) and Stochastic Actor Oriented Models (SAOMs).

The figure below shows how many packages on CRAN rely on those three packages (i.e. they are mentioned in `Depends`, `Imports`, or `Suggests`).
```{r}
#| label: crannet
#| echo: false
#| message: false
sg <- readRDS("data/crannet.RDS")
ggraph(sg, "stress") +
    geom_edge_link0(
        edge_color = "grey66", edge_width = 0.3,
        arrow = arrow(
            angle = 15, length = unit(0.15, "inches"),
            ends = "last", type = "closed"
        )
    ) +
    geom_node_point(shape = 21, aes(fill = col, size = seed)) +
    scale_fill_brewer(type = "qual", name = "") +
    scale_size_manual(values = c(2, 5), guide = "none") +
    guides(fill = guide_legend(override.aes = list(size = 5))) +
    theme_void() +
    theme(legend.position = "bottom") +
    coord_equal(clip = "off")
```

The figure was produced with the help of the `cranet` package.
`igraph` seems to be clearly favored by the R community. So if you install a package for, say, signed network analysis,
changes are high that it depends on the graph structures provided by `igraph`. Besides the data structures,
the package offers a large variety of network analytic methods which are all implemented in C. The methods are well optimized and
also work quite well for large graphs. 

The `network` package historically shares some commonalities with `igraphs` data structures. The package itself, though is really only providing the data structure and no analytic methods. The `sna` package ([link](https://cran.r-project.org/package=sna)) implements network analytic tools using the data structures provided by `network`.
Overall, the syntax and provided methods are very much comparable between `igraph` and `sna` and they are almost interchangeable in this regard. The advantage of igraph is its speed. I have run several benchmark tasks and `igraph` usually comes out on top. That being said, there is no real case to be made against `network`/`sna`. If you are into statistical modelling of networks, then that should actually be the preferred choice since the `ergm` package is build on top of `network`. In this case you probably also
want to look at the meta package `statnet` ([link](http://statnet.org/)) which includes `network`, `sna`, and `ergm` (among other packages).

The package `intergraph` ([link](https://cran.r-project.org/package=intergraph)) can be used if you need to switch representations between `igraph` and `network`.