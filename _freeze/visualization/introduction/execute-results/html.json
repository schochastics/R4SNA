{
  "hash": "d4e5063524e535181a5646444ef8697b",
  "result": {
    "engine": "knitr",
    "markdown": "# Introduction\nMost network analytic tasks are fairly straightforward to do in R. But when it comes to visualizing\nnetworks, R may lack behind some standalone software tools. Not because it is not possible to produce nice\nfigures, but rather because it requires some time to obtain pleasing results.\nJust take a look at the default output when plotting a network with the `plot()` function.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(networkdata)\nlibrary(igraph)\ndata(\"got\")\n\ngotS1 <- got[[1]]\nplot(gotS1)\n```\n\n::: {.cell-output-display}\n![](introduction_files/figure-html/plot_ugly-1.png){width=672}\n:::\n:::\n\n\n\n\nIt is definitely possible to produce nice figures with the igraph package (Check out [this](https://kateto.net/networks-r-igraph) wonderful tutorial), yet it may take some time\nto familiarize yourself with the syntax. Additionally, most of the layout algorithms of `igraph` \nare non-deterministic. This means that running the same plot call twice may produce different results.\n\nIn this part, you will learn the basics of `ggraph`, the \"`ggplot2` of networks\", together with\nthe `graphlayouts` package, which introduces additional useful layout algorithms to R. \nArguably, using `ggraph` is not really easier than `igraph`. But once the underlying \nprinciple of the *grammar of graphics* is understood, you'll see that it is actually quite intuitive to work with. \n\n## Required libraries\n\nTo run all the code in this tutorial, you need to install and load several packages.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"igraph\", \"graphlayouts\", \"ggraph\", \"ggforce\"))\ndevtools::install_github(\"schochastics/networkdata\")\n```\n:::\n\n\n\n\nMake sure you have at least the version given below. Some of the examples may not be backward compatible.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npackageVersion(\"igraph\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '2.1.4.9041'\n```\n\n\n:::\n\n```{.r .cell-code}\npackageVersion(\"graphlayouts\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '1.2.1'\n```\n\n\n:::\n\n```{.r .cell-code}\npackageVersion(\"ggraph\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '2.2.1'\n```\n\n\n:::\n\n```{.r .cell-code}\npackageVersion(\"networkdata\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '0.2.1'\n```\n\n\n:::\n\n```{.r .cell-code}\npackageVersion(\"ggforce\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '0.4.2'\n```\n\n\n:::\n:::\n\n\n\n\n`igraph` is mostly used for its data structures and `graphlayouts` and `ggraph` for visualizations.\nThe `networkdata` package contains a huge amount of example network data that always comes in handy for learning new visualization techniques.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\nlibrary(ggraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: ggplot2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(graphlayouts)\nlibrary(ggforce)\n```\n:::\n",
    "supporting": [
      "introduction_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}