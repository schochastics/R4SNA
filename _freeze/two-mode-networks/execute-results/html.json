{
  "hash": "b25edf121dcaddad7e758fa323809eb9",
  "result": {
    "engine": "knitr",
    "markdown": "# Two-Mode Networks\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\nlibrary(networkdata)\n```\n:::\n\n\n\n\n## Introduction\n\nA **two-mode network** is a network that consists of two disjoint sets of nodes (like people and events). Ties connect the two sets, for example participation of people in events. Other examples are \n\n- Affiliation networks (Membership in institutions/clubs)\n- Voting/Sponsorship networks (politicians and bills)\n- Citation network (authors and papers)\n- Co-Authorship networks (also authors and papers)\n\nThere are two ways of analysing a two-mode network. Either directly by using methods specifically created for such networks, or by projecting it to a regular one-mode network. The advantage of the former is that there is no information loss and the advantage of the latter is that we are working with more familiar data structures. The projection approach is more popular these days, but we will still introduce some direct methods to analyse two-mode networks. The main part of this chapter will however deal with the projection approach.\n\n## Two-mode data structure\nWe will discuss some methods tailored for two-mode networks via the famous \"southern women\" dataset consisting of 18 women who attended a series of 14 events. The network is included in the `networkdata` package.\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"southern_women\")\nsouthern_women\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIGRAPH 1074643 UN-B 32 89 -- \n+ attr: type (v/l), name (v/c)\n+ edges from 1074643 (vertex names):\n [1] EVELYN   --6/27 EVELYN   --3/2  EVELYN   --4/12 EVELYN   --9/26\n [5] EVELYN   --2/25 EVELYN   --5/19 EVELYN   --9/16 EVELYN   --4/8 \n [9] LAURA    --6/27 LAURA    --3/2  LAURA    --4/12 LAURA    --2/25\n[13] LAURA    --5/19 LAURA    --3/15 LAURA    --9/16 THERESA  --3/2 \n[17] THERESA  --4/12 THERESA  --9/26 THERESA  --2/25 THERESA  --5/19\n[21] THERESA  --3/15 THERESA  --9/16 THERESA  --4/8  BRENDA   --6/27\n[25] BRENDA   --4/12 BRENDA   --9/26 BRENDA   --2/25 BRENDA   --5/19\n[29] BRENDA   --3/15 BRENDA   --9/16 CHARLOTTE--4/12 CHARLOTTE--9/26\n+ ... omitted several edges\n```\n\n\n:::\n:::\n\n\n`igraph` interprets a network as a two-mode network if it has a logical node attribute called `type`.\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(V(southern_women)$type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFALSE  TRUE \n   18    14 \n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](two-mode-networks_files/figure-html/southern-women-plot-1.png){width=672}\n:::\n:::\n\n\nThe adjacency matrix of a two-mode network is referred to as  **biadjacency matrix** and can be obtained via `as_biadjacency_matrix()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nA <- as_biadjacency_matrix(southern_women)\nA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          6/27 3/2 4/12 9/26 2/25 5/19 3/15 9/16 4/8 6/10 2/23 4/7 11/21 8/3\nEVELYN       1   1    1    1    1    1    0    1   1    0    0   0     0   0\nLAURA        1   1    1    0    1    1    1    1   0    0    0   0     0   0\nTHERESA      0   1    1    1    1    1    1    1   1    0    0   0     0   0\nBRENDA       1   0    1    1    1    1    1    1   0    0    0   0     0   0\nCHARLOTTE    0   0    1    1    1    0    1    0   0    0    0   0     0   0\nFRANCES      0   0    1    0    1    1    0    1   0    0    0   0     0   0\nELEANOR      0   0    0    0    1    1    1    1   0    0    0   0     0   0\nPEARL        0   0    0    0    0    1    0    1   1    0    0   0     0   0\nRUTH         0   0    0    0    1    0    1    1   1    0    0   0     0   0\nVERNE        0   0    0    0    0    0    1    1   1    0    0   1     0   0\nMYRNA        0   0    0    0    0    0    0    1   1    1    0   1     0   0\nKATHERINE    0   0    0    0    0    0    0    1   1    1    0   1     1   1\nSYLVIA       0   0    0    0    0    0    1    1   1    1    0   1     1   1\nNORA         0   0    0    0    0    1    1    0   1    1    1   1     1   1\nHELEN        0   0    0    0    0    0    1    1   0    1    1   1     0   0\nDOROTHY      0   0    0    0    0    0    0    1   1    0    0   0     0   0\nOLIVIA       0   0    0    0    0    0    0    0   1    0    1   0     0   0\nFLORA        0   0    0    0    0    0    0    0   1    0    1   0     0   0\n```\n\n\n:::\n:::\n\n\n## Direct Approach\nThe `tnet` and `bipartite` packages offer some methods to analyse two mode networks directly, by adapting tools for standard (one-mode) networks, like the methods described in previous sections.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tnet)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: survival\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntnet: Analysis of Weighted, Two-mode, and Longitudinal networks.\nType ?tnet for help.\n```\n\n\n:::\n:::\n\n\n`tnet` implements a version of the clustering coefficient for two-mode networks. Remember that its one-mode equivalent is based on triangle counts, a structure that cannot exist in two-mode networks (think about it for a second).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransitivity(southern_women)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\ntransitivity(southern_women, type = \"local\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n```\n\n\n:::\n:::\n\n\nThe version implemented in `tnet` is based on cycles of length 6, which involves three nodes of each mode.\n\n::: {.cell}\n\n```{.r .cell-code}\nel_women <- as_edgelist(southern_women, names = FALSE)\n\nclustering_tm(el_women)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.771897\n```\n\n\n:::\n\n```{.r .cell-code}\n# coefficient for first mode\nclustering_local_tm(el_women)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   node       lc\n1     1 0.766667\n2     2 0.842175\n3     3 0.752344\n4     4 0.838791\n5     5 1.000000\n6     6 0.869048\n7     7 0.795918\n8     8 0.646259\n9     9 0.670251\n10   10 0.674089\n11   11 0.713881\n12   12 0.769556\n13   13 0.746193\n14   14 0.837950\n15   15 0.815920\n16   16 0.540741\n17   17 0.580645\n18   18 0.580645\n```\n\n\n:::\n\n```{.r .cell-code}\n# coefficient for second mode\nclustering_local_tm(el_women[, 2:1])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   node       lc\n1     1      NaN\n2     2      NaN\n3     3      NaN\n4     4      NaN\n5     5      NaN\n6     6      NaN\n7     7      NaN\n8     8      NaN\n9     9      NaN\n10   10      NaN\n11   11      NaN\n12   12      NaN\n13   13      NaN\n14   14      NaN\n15   15      NaN\n16   16      NaN\n17   17      NaN\n18   18      NaN\n19   19 1.000000\n20   20 0.948718\n21   21 0.953297\n22   22 0.964497\n23   23 0.962825\n24   24 0.813559\n25   25 0.717182\n26   26 0.779158\n27   27 0.735363\n28   28 0.854460\n29   29 0.955556\n30   30 0.884477\n31   31 0.870968\n32   32 0.870968\n```\n\n\n:::\n:::\n\n\nNote that this very cumbersome to count these cycles. It is advisable to run this function only on fairly small networks.\n\nThe package does include some more two-mode specific functions (look for `*_tm()`), but the outcomes are equivalent to using its counterpart in igraph. \n\nThe `bipartite` package is tailored towards ecological network analysis. Relevant functions for standard two-mode networks are the same as in `tnet`.\n\n## Projection Approach\nBesides analyzing a two-mode network as-is, there is also the possibility to project it to one mode. \nMathematically, this is done by calculating $AA^T$ or $A^TA$, depending which mode we project on.\nAs an example, consider the southern women dataset again.\n\n::: {.cell}\n\n```{.r .cell-code}\nB <- A %*% t(A)\nB\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          EVELYN LAURA THERESA BRENDA CHARLOTTE FRANCES ELEANOR PEARL RUTH\nEVELYN         8     6       7      6         3       4       3     3    3\nLAURA          6     7       6      6         3       4       4     2    3\nTHERESA        7     6       8      6         4       4       4     3    4\nBRENDA         6     6       6      7         4       4       4     2    3\nCHARLOTTE      3     3       4      4         4       2       2     0    2\nFRANCES        4     4       4      4         2       4       3     2    2\nELEANOR        3     4       4      4         2       3       4     2    3\nPEARL          3     2       3      2         0       2       2     3    2\nRUTH           3     3       4      3         2       2       3     2    4\nVERNE          2     2       3      2         1       1       2     2    3\nMYRNA          2     1       2      1         0       1       1     2    2\nKATHERINE      2     1       2      1         0       1       1     2    2\nSYLVIA         2     2       3      2         1       1       2     2    3\nNORA           2     2       3      2         1       1       2     2    2\nHELEN          1     2       2      2         1       1       2     1    2\nDOROTHY        2     1       2      1         0       1       1     2    2\nOLIVIA         1     0       1      0         0       0       0     1    1\nFLORA          1     0       1      0         0       0       0     1    1\n          VERNE MYRNA KATHERINE SYLVIA NORA HELEN DOROTHY OLIVIA FLORA\nEVELYN        2     2         2      2    2     1       2      1     1\nLAURA         2     1         1      2    2     2       1      0     0\nTHERESA       3     2         2      3    3     2       2      1     1\nBRENDA        2     1         1      2    2     2       1      0     0\nCHARLOTTE     1     0         0      1    1     1       0      0     0\nFRANCES       1     1         1      1    1     1       1      0     0\nELEANOR       2     1         1      2    2     2       1      0     0\nPEARL         2     2         2      2    2     1       2      1     1\nRUTH          3     2         2      3    2     2       2      1     1\nVERNE         4     3         3      4    3     3       2      1     1\nMYRNA         3     4         4      4    3     3       2      1     1\nKATHERINE     3     4         6      6    5     3       2      1     1\nSYLVIA        4     4         6      7    6     4       2      1     1\nNORA          3     3         5      6    8     4       1      2     2\nHELEN         3     3         3      4    4     5       1      1     1\nDOROTHY       2     2         2      2    1     1       2      1     1\nOLIVIA        1     1         1      1    2     1       1      2     2\nFLORA         1     1         1      1    2     1       1      2     2\n```\n\n\n:::\n:::\n\n\nThis matrix can now be interpreted as a weighted network among the 18 women. Each entry corresponds to the number of times two women went to the same event.\n\nThe same can be achieved with the function `bipartite_projection()`, which returns both projections.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbipartite_projection(southern_women)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$proj1\nIGRAPH 2ea1d53 UNW- 18 139 -- \n+ attr: name (v/c), weight (e/n)\n+ edges from 2ea1d53 (vertex names):\n [1] EVELYN --LAURA     EVELYN --BRENDA    EVELYN --THERESA   EVELYN --CHARLOTTE\n [5] EVELYN --FRANCES   EVELYN --ELEANOR   EVELYN --RUTH      EVELYN --PEARL    \n [9] EVELYN --NORA      EVELYN --VERNE     EVELYN --MYRNA     EVELYN --KATHERINE\n[13] EVELYN --SYLVIA    EVELYN --HELEN     EVELYN --DOROTHY   EVELYN --OLIVIA   \n[17] EVELYN --FLORA     LAURA  --BRENDA    LAURA  --THERESA   LAURA  --CHARLOTTE\n[21] LAURA  --FRANCES   LAURA  --ELEANOR   LAURA  --RUTH      LAURA  --PEARL    \n[25] LAURA  --NORA      LAURA  --VERNE     LAURA  --SYLVIA    LAURA  --HELEN    \n[29] LAURA  --MYRNA     LAURA  --KATHERINE LAURA  --DOROTHY   THERESA--BRENDA   \n+ ... omitted several edges\n\n$proj2\nIGRAPH 164bb63 UNW- 14 66 -- \n+ attr: name (v/c), weight (e/n)\n+ edges from 164bb63 (vertex names):\n [1] 6/27--3/2   6/27--4/12  6/27--9/26  6/27--2/25  6/27--5/19  6/27--9/16 \n [7] 6/27--4/8   6/27--3/15  3/2 --4/12  3/2 --9/26  3/2 --2/25  3/2 --5/19 \n[13] 3/2 --9/16  3/2 --4/8   3/2 --3/15  4/12--9/26  4/12--2/25  4/12--5/19 \n[19] 4/12--9/16  4/12--4/8   4/12--3/15  9/26--2/25  9/26--5/19  9/26--9/16 \n[25] 9/26--4/8   9/26--3/15  2/25--5/19  2/25--9/16  2/25--4/8   2/25--3/15 \n[31] 5/19--9/16  5/19--4/8   5/19--3/15  5/19--6/10  5/19--2/23  5/19--4/7  \n[37] 5/19--11/21 5/19--8/3   3/15--9/16  3/15--4/8   3/15--4/7   3/15--6/10 \n[43] 3/15--11/21 3/15--8/3   3/15--2/23  9/16--4/8   9/16--4/7   9/16--6/10 \n+ ... omitted several edges\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](two-mode-networks_files/figure-html/plot_weighted_proj-1.png){width=672}\n:::\n:::\n\n\nAs you can see, the network has become weighted and very dense. A very common step is to binarize the\nnetwork. In doing so, we basically turn the network into a simple undirected one-mode network. This makes all methods we described in the first few sections applicable to the network (at least in theory).\n\nThe simplest way of binarizing a weighted projection is to define a global threshold and remove a tie if its weight is below the global threshold. This is simple but comes with many undesirable structural problems. More sophisticated tools work with statistical models in the background which determine if an edge weight differs enough from the expected value. If so, the edge is kept in the binary \"backbone\" of the network. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(backbone)\n```\n:::\n\n\nAll possible backbone extraction methods are implemented in the `backbone` package. \n\n\n\nAn introduction to the package can be\nfound on [arxiv](https://arxiv.org/abs/1912.12779).\n",
    "supporting": [
      "two-mode-networks_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}