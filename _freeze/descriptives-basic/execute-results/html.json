{
  "hash": "4771abf66801ccc5a1eac51efdf3764f",
  "result": {
    "engine": "knitr",
    "markdown": "# Basic Network Descriptives\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\nlibrary(networkdata)\n```\n:::\n\n\n\n\n## Introduction\n\n## Basic Network Notation\n\nNetworks are commonly represented with an **adjacency matrix** or via an **edgelist**. If you are interested \nBelow, we represent friendship relations between Bob, Ann, and Steve as a matrix and an edgelist.\n\n::: {.cell}\n\n```{.r .cell-code}\n# adjacency matrix#|\nA <- matrix(\n    c(0, 1, 1, 1, 0, 1, 1, 1, 0),\n    nrow = 3, ncol = 3, byrow = TRUE\n)\n\nrownames(A) <- colnames(A) <- c(\"Bob\", \"Ann\", \"Steve\")\nA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Bob Ann Steve\nBob     0   1     1\nAnn     1   0     1\nSteve   1   1     0\n```\n\n\n:::\n\n```{.r .cell-code}\n# edgelist\nel <- matrix(c(\"Bob\", \"Ann\", \"Bob\", \"Steve\", \"Ann\", \"Steve\"),\n    nrow = 3, ncol = 2, byrow = TRUE\n)\nel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1]  [,2]   \n[1,] \"Bob\" \"Ann\"  \n[2,] \"Bob\" \"Steve\"\n[3,] \"Ann\" \"Steve\"\n```\n\n\n:::\n:::\n\n\nThe adjacency matrix $A$ is symmetric, meaning that the relations are undirected, i.e. Bob is friends with\nAnn and Ann is friends with Bob. In general, $A[i,j]=1$, if there is a relation between $i$ and $j$.\nIf $A[i,j]=1$ does not imply $A[j,i]=1$ then $A$ defines a directed network.\n\nOnce we have defined an edgelist or an adjacency matrix, we can turn them into `igraph` objects as follows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng1 <- graph_from_adjacency_matrix(A, mode = \"undirected\", diag = FALSE)\n\ng2 <- graph_from_edgelist(el, directed = FALSE)\n# g1 and g2 are the same graph so only printing g1\ng1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIGRAPH 1dc6f80 UN-- 3 3 -- \n+ attr: name (v/c)\n+ edges from 1dc6f80 (vertex names):\n[1] Bob--Ann   Bob--Steve Ann--Steve\n```\n\n\n:::\n:::\n\n\nThe printed summary shows some general descriptives of the graph.\nThe string \"UN--\" in the first line indicates that the network is *U*ndirected (*D* for directed graphs) and has a *N*ame attribute (we named the nodes Bob, Ann, and Steve). The third and forth character are *W*, if there is a edge weight attribute, and *B* if the network is bipartite (there exists a node attribute \"type\"). The following number indicate the number of nodes and edges.\nThe second line lists all graph, node and edge variables. Here, we only have a node attribute \"name\". \n\nThe conversion from edgelist/adjacency matrix into an igraph object is quite straightforward. The only difficulty is setting the parameters correctly (Is the network directed or not?), especially for edgelists where it may not immediately be obvious if the network is directed or not.\n\nIn the following, we use a larger network to introduce some terminology.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"greys\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/plot_greys-1.png){width=1152}\n:::\n:::\n\n\nThe \"greys\" network is part of the `networkdata` package and consists of most characters from the show \"Grey's Anatomy\" and who hooked up with whom.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngreys\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIGRAPH f7716f1 UN-- 54 57 -- \n+ attr: name (v/c), sex (v/c), race (v/c), birthyear (v/n), position\n| (v/c), season (v/n), sign (v/c)\n+ edges from f7716f1 (vertex names):\n [1] Arizona Robbins--Leah Murphy     Alex Karev     --Leah Murphy    \n [3] Arizona Robbins--Lauren Boswell  Arizona Robbins--Callie Torres  \n [5] Erica Hahn     --Callie Torres   Alex Karev     --Callie Torres  \n [7] Mark Sloan     --Callie Torres   George O'Malley--Callie Torres  \n [9] Izzie Stevens  --George O'Malley Meredith Grey  --George O'Malley\n[11] Denny Duqutte  --Izzie Stevens   Izzie Stevens  --Alex Karev     \n[13] Derek Sheperd  --Meredith Grey   Preston Burke  --Cristina Yang  \n+ ... omitted several edges\n```\n\n\n:::\n:::\n\n\n## Simple Descriptives\n\nThe **density** of a network is defined as the fraction of the potential edges in a network that are actually present.\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\n    edge_density(make_empty_graph(10)),\n    edge_density(greys),\n    edge_density(make_full_graph(10))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0000000 0.0398323 1.0000000\n```\n\n\n:::\n:::\n\n\nThe density of an empty network is $0$ and for the full network it is $1$. The density of empirical network \nis somewhere in between but as the number of nodes increases, we'd expect the density to decrease and the network \nbecomes quite sparse.\n\nA **shortest path** is a path that connects two nodes in a network with a minimal number of edges. The length of a shortest path is called the **distance** between two nodes.\n\n::: {.cell}\n\n```{.r .cell-code}\nshortest_paths(greys,from = \"Alex Karev\",to = \"Owen Hunt\",output = \"vpath\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$vpath\n$vpath[[1]]\n+ 5/54 vertices, named, from f7716f1:\n[1] Alex Karev         Addison Montgomery Mark Sloan         Teddy Altman      \n[5] Owen Hunt         \n\n\n$epath\nNULL\n\n$predecessors\nNULL\n\n$inbound_edges\nNULL\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/greys_shortest_path-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistances(greys)[1:10, 1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Addison Montgomery Adele Webber Teddy Altman Amelia Shepherd\nAddison Montgomery                  0          Inf            2               2\nAdele Webber                      Inf            0          Inf             Inf\nTeddy Altman                        2          Inf            0               2\nAmelia Shepherd                     2          Inf            2               0\nArizona Robbins                     3          Inf            3               3\nRebecca Pope                        2          Inf            4               4\nJackson Avery                       3          Inf            3               3\nMiranda Bailey                    Inf          Inf          Inf             Inf\nBen Warren                        Inf          Inf          Inf             Inf\nHenry Burton                        3          Inf            1               3\n                   Arizona Robbins Rebecca Pope Jackson Avery Miranda Bailey\nAddison Montgomery               3            2             3            Inf\nAdele Webber                   Inf          Inf           Inf            Inf\nTeddy Altman                     3            4             3            Inf\nAmelia Shepherd                  3            4             3            Inf\nArizona Robbins                  0            3             4            Inf\nRebecca Pope                     3            0             3            Inf\nJackson Avery                    4            3             0            Inf\nMiranda Bailey                 Inf          Inf           Inf              0\nBen Warren                     Inf          Inf           Inf              1\nHenry Burton                     4            5             4            Inf\n                   Ben Warren Henry Burton\nAddison Montgomery        Inf            3\nAdele Webber              Inf          Inf\nTeddy Altman              Inf            1\nAmelia Shepherd           Inf            3\nArizona Robbins           Inf            4\nRebecca Pope              Inf            5\nJackson Avery             Inf            4\nMiranda Bailey              1          Inf\nBen Warren                  0          Inf\nHenry Burton              Inf            0\n```\n\n\n:::\n:::\n\n\nThe Grey's Anatomy network is **disconnected** and consists of $4$ **connected components**. There are no \nshortest paths between components, which means that the distance is not measurable and set to infinity.\n\nThe length of the longest shortest path is called the **diameter** of the network.\n\n::: {.cell}\n\n```{.r .cell-code}\ndiameter(greys)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/greys_diameter-1.png){width=1152}\n:::\n:::\n\n\n\n**Transitivity** measures the probability that the neighbors of a node are also connected. This is also called the **clustering coefficient**.  \n\n::: {.cell}\n\n```{.r .cell-code}\ntransitivity(greys, type = \"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\ntransitivity(greys, type = \"local\", isolates = \"zero\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[39] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n```\n\n\n:::\n:::\n\nThe global transitivity of an undirected network is the ratio of the triangles and the connected triples in the network.\nLocal transitivity of a node is the ratio of the triangles connected to the node and the triples centered on the node itself.\nIn social networks, we generally assume that the transitivity is quite high (\"the friend of my friend is also my friend\"). In our \nexample, we have zero for all values. This is due to the fact that a triangle would require a same sex hook-up which did not occur (*Disclaimer: I never watched the show and gathered the hook ups from various internet resources. So this may well be wrong.*).\n\nFor directed networks, a measure of importance is **reciprocity**, which is defined as the proportion of mutual edges between nodes. To illustrate the measure, we use a network of grooming relations among a group of rhesus monkeys.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"rhesus\")\nreciprocity(rhesus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.756757\n```\n\n\n:::\n:::\n\n\nAbout 76% of edges are reciprocated in the network. The figure below highlights the reciprocated edges. \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/rhesus_net-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "descriptives-basic_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}