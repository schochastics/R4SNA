{
  "hash": "b7074df0a3005c9a1d40a1df894c2bdc",
  "result": {
    "engine": "knitr",
    "markdown": "# Basic Network Statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\nlibrary(networkdata)\n```\n:::\n\n\n\n\n\n\n## Introduction\n\n\n## Simple Network Characteristics\n\nIn the following, we use a network from the `networkdata` package to introduce some basic network statistics.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"greys\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/plot_greys-1.png){width=1152}\n:::\n:::\n\n\n\n\nThe \"greys\" network consists of characters from the show \"Grey's Anatomy\" and links indicate who hooked up with whom (up to about 2022).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngreys\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIGRAPH f7716f1 UN-- 54 57 -- \n+ attr: name (v/c), sex (v/c), race (v/c), birthyear (v/n), position\n| (v/c), season (v/n), sign (v/c)\n+ edges from f7716f1 (vertex names):\n [1] Arizona Robbins--Leah Murphy     Alex Karev     --Leah Murphy    \n [3] Arizona Robbins--Lauren Boswell  Arizona Robbins--Callie Torres  \n [5] Erica Hahn     --Callie Torres   Alex Karev     --Callie Torres  \n [7] Mark Sloan     --Callie Torres   George O'Malley--Callie Torres  \n [9] Izzie Stevens  --George O'Malley Meredith Grey  --George O'Malley\n[11] Denny Duqutte  --Izzie Stevens   Izzie Stevens  --Alex Karev     \n[13] Derek Sheperd  --Meredith Grey   Preston Burke  --Cristina Yang  \n+ ... omitted several edges\n```\n\n\n:::\n:::\n\n\n\n\n\nThe **density** of a network is defined as the fraction of the potential edges in a network that are actually present.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\n    edge_density(make_empty_graph(10)),\n    edge_density(greys),\n    edge_density(make_full_graph(10))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.00000000 0.03983229 1.00000000\n```\n\n\n:::\n:::\n\n\n\n\nThe density of an empty network is $0$ and for the full network it is $1$. The density of empirical network \nis somewhere in between but as the number of nodes increases, we'd expect the density to decrease and the network \nbecomes quite sparse.\n\nA **shortest path** is a path that connects two nodes in a network with a minimal number of edges. The length of a shortest path is called the **distance** between two nodes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshortest_paths(greys,from = \"Alex Karev\",to = \"Owen Hunt\",output = \"vpath\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$vpath\n$vpath[[1]]\n+ 5/54 vertices, named, from f7716f1:\n[1] Alex Karev         Addison Montgomery Mark Sloan         Teddy Altman      \n[5] Owen Hunt         \n\n\n$epath\nNULL\n\n$predecessors\nNULL\n\n$inbound_edges\nNULL\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/greys_shortest_path-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistances(greys)[1:10, 1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Addison Montgomery Adele Webber Teddy Altman Amelia Shepherd\nAddison Montgomery                  0          Inf            2               2\nAdele Webber                      Inf            0          Inf             Inf\nTeddy Altman                        2          Inf            0               2\nAmelia Shepherd                     2          Inf            2               0\nArizona Robbins                     3          Inf            3               3\nRebecca Pope                        2          Inf            4               4\nJackson Avery                       3          Inf            3               3\nMiranda Bailey                    Inf          Inf          Inf             Inf\nBen Warren                        Inf          Inf          Inf             Inf\nHenry Burton                        3          Inf            1               3\n                   Arizona Robbins Rebecca Pope Jackson Avery Miranda Bailey\nAddison Montgomery               3            2             3            Inf\nAdele Webber                   Inf          Inf           Inf            Inf\nTeddy Altman                     3            4             3            Inf\nAmelia Shepherd                  3            4             3            Inf\nArizona Robbins                  0            3             4            Inf\nRebecca Pope                     3            0             3            Inf\nJackson Avery                    4            3             0            Inf\nMiranda Bailey                 Inf          Inf           Inf              0\nBen Warren                     Inf          Inf           Inf              1\nHenry Burton                     4            5             4            Inf\n                   Ben Warren Henry Burton\nAddison Montgomery        Inf            3\nAdele Webber              Inf          Inf\nTeddy Altman              Inf            1\nAmelia Shepherd           Inf            3\nArizona Robbins           Inf            4\nRebecca Pope              Inf            5\nJackson Avery             Inf            4\nMiranda Bailey              1          Inf\nBen Warren                  0          Inf\nHenry Burton              Inf            0\n```\n\n\n:::\n:::\n\n\n\n\nThe Grey's Anatomy network is **disconnected** and consists of $4$ **connected components**. There are no \nshortest paths between components, which means that the distance is not measurable and set to infinity.\n\nThe length of the longest shortest path is called the **diameter** of the network.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiameter(greys)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/greys_diameter-1.png){width=1152}\n:::\n:::\n\n\n\n\n\n**Transitivity** measures the probability that the neighbors of a node are also connected. This is also called the **clustering coefficient**.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransitivity(greys, type = \"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\ntransitivity(greys, type = \"local\", isolates = \"zero\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAddison Montgomery       Adele Webber       Teddy Altman    Amelia Shepherd \n                 0                  0                  0                  0 \n   Arizona Robbins       Rebecca Pope      Jackson Avery     Miranda Bailey \n                 0                  0                  0                  0 \n        Ben Warren       Henry Burton    Catherine Avery       Colin Marlow \n                 0                  0                  0                  0 \n     Denny Duqutte      Derek Sheperd         Ellis Grey     Finn Dandridge \n                 0                  0                  0                  0 \n     Meredith Grey         Erica Hahn               Hank      Izzie Stevens \n                 0                  0                  0                  0 \n        Alex Karev       April Kepner         Lexie Grey              Lloyd \n                 0                  0                  0                  0 \n       Lucy Fields      Megan Nowland       Steve Mostow       Dana Seabury \n                 0                  0                  0                  0 \n     Nancy Shepard       Nurse Olivia    George O'Malley          Owen Hunt \n                 0                  0                  0                  0 \n    Andrew Perkins      Pierce Halley      Preston Burke       Reed Adamson \n                 0                  0                  0                  0 \n        Mark Sloan       Steve Murphy         Susan Grey      Thatcher Grey \n                 0                  0                  0                  0 \n     Callie Torres       Tucker Jones      Cristina Yang     Heather Brooks \n                 0                  0                  0                  0 \n         Jo Wilson     Lauren Boswell        Leah Murphy          Eli James \n                 0                  0                  0                  0 \n              Emma  Stephanie Edwards         Shane Ross     Richard Webber \n                 0                  0                  0                  0 \n              Rose       Nathan Riggs \n                 0                  0 \n```\n\n\n:::\n:::\n\n\n\nThe global transitivity of an undirected network is the ratio of the triangles and the connected triples in the network.\nLocal transitivity of a node is the ratio of the triangles connected to the node and the triples centered on the node itself.\nIn social networks, we generally assume that the transitivity is quite high (\"the friend of my friend is also my friend\"). In our \nexample, we have zero for all values. This is due to the fact that a triangle would require a same sex hook-up which did not occur (*Disclaimer: I never watched the show and gathered the hook ups from various internet resources. So this may well be wrong.*).\n\nFor directed networks, a measure of importance is **reciprocity**, which is defined as the proportion of mutual edges between nodes. To illustrate the measure, we use a network of grooming relations among a group of rhesus monkeys.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"rhesus\")\nreciprocity(rhesus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7567568\n```\n\n\n:::\n:::\n\n\n\n\nAbout 76% of edges are reciprocated in the network. The figure below highlights the reciprocated edges. \n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: `is.mutual()` was deprecated in igraph 2.0.0.\nâ„¹ Please use `which_mutual()` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/rhesus_net-1.png){width=672}\n:::\n:::\n\n\n\n\n## Dyad and Triad Census\n\nThe **dyad census** categorize all possible dyads within a network based on their mutual connection status. It classifies dyads into three categories: mutual (both nodes have a directed edge to the other, i.e. reciprocated), asymmetric (only one node has a directed edge to the other), and null (no directed edges between the nodes). The census provides insights into the overall reciprocity and directionality of relationships in the network, helping to understand the balance between mutual cooperation, one-sided relationships, and absence of direct interaction.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndyad_census(rhesus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$mut\n[1] 42\n\n$asym\n[1] 27\n\n$null\n[1] 51\n```\n\n\n:::\n:::\n\n\n\n\nMore important than the dyad census is usually the **triad census**.\nIn a directed network, there are 16 possible configurations of edges that can occur between three nodes. \n![](assets/img/triad_census.jpg)\n\nThe triad census of a network gives the number of occurrences of each of these triad. Triads are labelled `xyzL` where `x` is the number of reciprocated ties, `y` is the number of unreciprocated ties and `z` is the number of null ties. The `L` term is a letter (U,C,D or T) which allows to differentiate between triads where these numbers are the same. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntriad_census(rhesus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  49  72 115  16  12  11  50  50   2   0  54  13  12   7  58  39\n```\n\n\n:::\n:::\n\n\n\n\n## Use case: Triad Census\n\nOne of the many applications of the triad census is to compare a set of networks. In this example, we are tackling the question of \"how transitive is football?\" and assess structural differences among a set of football leagues. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"football_triad\")\n```\n:::\n\n\n\n\n`football_triad` is a list which contains networks of 112 football leagues as igraph objects. A directed link between\nteam A and B indicates that A won a match against B. Note that there can also be an edge from B to A,\nsince most leagues play a double round robin. For the sake of simplicity, all draws were deleted so that\nthere could also be null ties between two teams if both games ended in a draw.\n\nBelow, we calculate the triad census for all network at once using `lapply()`.\nThe function returns the triad census for each network as a list, which we turn into a matrix\nin the second step. Afterwards, we manually add the row and column names of the matrix.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfooty_census <- lapply(football_triad, triad_census)\nfooty_census <- matrix(unlist(footy_census), ncol = 16, byrow = T)\nrownames(footy_census) <- sapply(football_triad, function(x) x$name)\ncolnames(footy_census) <- c(\n    \"003\", \"012\", \"102\", \"021D\", \"021U\", \"021C\", \"111D\", \"111U\",\n    \"030T\", \"030C\", \"201\", \"120D\", \"120U\", \"120C\", \"210\", \"300\"\n)\n\n# normalize to make proportions comparable across leagues\nfooty_census_norm <- footy_census / rowSums(footy_census)\n\n# check the Top 5 leagues\nidx <- which(rownames(footy_census) %in% c(\n    \"england\", \"spain\", \"germany\",\n    \"italy\", \"france\"\n))\nfooty_census[idx, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        003 012 102 021D 021U 021C 111D 111U 030T 030C 201 120D 120U 120C 210\nengland   2  10   0   58   31   40   34   44  338   29  19  118  129  143 131\nfrance    1  23   5   30   33   44   48   40  332   41  16  132  108  160 114\ngermany   0  21   6   27   19   49   38   46  165   16  23   77   79  117 120\nitaly     1   4   2   35   43   30   30   22  419   38   5  164  116  118  99\nspain     0   8   4   27   42   45   32   35  364   43  11  126  105  148 130\n        300\nengland  14\nfrance   13\ngermany  13\nitaly    14\nspain    20\n```\n\n\n:::\n:::\n\n\n\n\nNotice how the transitive triad (030T) has the largest count in the top leagues, hinting toward the childhood wisdom:\n\"If A wins against B and B wins against C, then A must win against C\".\n\nIn empirical studies, we are not necessarily only interested in transitive triads, but rather how the triad census profiles compare across networks. We follow [Kathrine Faust's](https://doi.org/10.1111%2Fj.1467-9531.2007.00179.x) suggestion and do a singular value decomposition (SVD) on the normalized triad census matrix.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfooty_svd <- svd(footy_census_norm)\n```\n:::\n\n\n\n\nSVDs are used to reduce the dimensionality of the data, but retaining most of the information. In our case, the \ndata is 16 dimensional, which is impossible to visualize to compare the networks. With an SVD, we can reduce it to two dimensions and get a better visual overview.\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ggrepel: 35 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/plot_svd_u-1.png){width=1152}\n:::\n:::\n\n\n\n\nHow to interpret the dimensions? To investigate this question, we take a closer look at the first two dimensions and compare it to some network descriptives. For the sake of brevity, we here only look at the density and proportion of 030T triads. In\ngeneral, any node/dyad/triad level statistic could be used.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/svd1_density-1.png){width=1152}\n:::\n:::\n\n\n\n\nDensity doesn't really seem to be related to the first dimension in this case (in many cases it is!). Might be worthwhile to\nexplore this further\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/svd2_030T-1.png){width=1152}\n:::\n:::\n\n\n\n\nFor the second dimension, we get a clearer association. It seems that the fraction of transitive triads \nis a good indicator for structural differences among leagues.\n\n## Dyad/Triad Census with Attributes\n\nThe R package `netUtils` implements a version of the dyad and triad census which can account for node attributes. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(netUtils)\n```\n:::\n\n\n\n\nThe node attribute should be integers from `1` to `max(attr)`. \nThe output of `dyad_census_attr()` is a data.frame where each row corresponds to a pair of attribute values and the count of asymmetric, symmetric and null dyads.\n\nThe output of `triad_census_attr()` is a named vector where the names are of the form Txxx-abc, where xxx corresponds to the standard triad census notation and \"abc\" are the attributes of the involved nodes.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(112)\ng <- sample_gnp(20, p = 0.3, directed = TRUE)\n# add a vertex attribute\nV(g)$type <- rep(1:2, each = 10)\n\ndyad_census_attr(g, \"type\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  from_attr to_attr asym_ab asym_ba sym null\n1         1       1       0       0   4   41\n2         1       2      20      28  14   38\n3         2       2       0       0   8   37\n```\n\n\n:::\n\n```{.r .cell-code}\ntriad_census_attr(g, \"type\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n T003-111  T003-112  T003-122  T003-222  T012-111  T012-121  T012-112  T012-122 \n        8        33        28         7        32        40        31        19 \n T012-211  T012-221  T012-212  T012-222 T021D-111 T021D-211 T021D-112 T021D-212 \n       27        41        25        26         9        19        19        21 \nT021D-122 T021D-222  T102-111  T102-112  T102-122  T102-211  T102-212  T102-222 \n        7        10        11        18        16         5        19        10 \nT021C-111 T021C-211 T021C-121 T021C-221 T021C-112 T021C-212 T021C-122 T021C-222 \n       17        23        29        17        19         7        24        10 \nT111U-111 T111U-121 T111U-112 T111U-122 T111U-211 T111U-221 T111U-212 T111U-222 \n        9        16         7        21         5        13        10         6 \nT021U-111 T021U-112 T021U-122 T021U-211 T021U-212 T021U-222 T030T-111 T030T-121 \n       11        19        13         3        14         7        11        11 \nT030T-112 T030T-122 T030T-211 T030T-221 T030T-212 T030T-222 T120U-111 T120U-112 \n       11        13        10        14         8         5         1         8 \nT120U-122 T120U-211 T120U-212 T120U-222 T111D-111 T111D-121 T111D-112 T111D-122 \n        6         0         4         4         4        12         8        13 \nT111D-211 T111D-221 T111D-212 T111D-222  T201-111  T201-112  T201-121  T201-122 \n       14        20        10        15         0         5         3         5 \n T201-221  T201-222 T030C-111 T030C-112 T030C-122 T030C-222 T120C-111 T120C-121 \n        3         3         2        12        14         3         3         8 \nT120C-211 T120C-221 T120C-112 T120C-122 T120C-212 T120C-222 T120D-111 T120D-112 \n        7         5         5         7         7         6         0         9 \nT120D-211 T120D-212 T120D-122 T120D-222  T210-111  T210-121  T210-211  T210-221 \n        1         9         4         1         2         8         3         5 \n T210-112  T210-122  T210-212  T210-222  T300-111  T300-112  T300-122  T300-222 \n        1         3         5         5         0         1         0         2 \n```\n\n\n:::\n:::\n\n\n\n\n## Degree distributions\n\n## Scientific Reading\n",
    "supporting": [
      "descriptives-basic_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}