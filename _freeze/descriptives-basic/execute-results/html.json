{
  "hash": "6caadc258497e907f2f00f5b9b1d6437",
  "result": {
    "engine": "knitr",
    "markdown": "# Basic Network Statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\nlibrary(networkdata)\n```\n:::\n\n\n\n\n## Introduction\n\n## Basic Network Notation\n\nNetworks are commonly represented with an **adjacency matrix** or via an **edgelist**. If you are interested \nBelow, we represent friendship relations between Bob, Ann, and Steve as a matrix and an edgelist.\n\n::: {.cell}\n\n```{.r .cell-code}\n# adjacency matrix#|\nA <- matrix(\n    c(0, 1, 1, 1, 0, 1, 1, 1, 0),\n    nrow = 3, ncol = 3, byrow = TRUE\n)\n\nrownames(A) <- colnames(A) <- c(\"Bob\", \"Ann\", \"Steve\")\nA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Bob Ann Steve\nBob     0   1     1\nAnn     1   0     1\nSteve   1   1     0\n```\n\n\n:::\n\n```{.r .cell-code}\n# edgelist\nel <- matrix(c(\"Bob\", \"Ann\", \"Bob\", \"Steve\", \"Ann\", \"Steve\"),\n    nrow = 3, ncol = 2, byrow = TRUE\n)\nel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1]  [,2]   \n[1,] \"Bob\" \"Ann\"  \n[2,] \"Bob\" \"Steve\"\n[3,] \"Ann\" \"Steve\"\n```\n\n\n:::\n:::\n\n\nThe adjacency matrix $A$ is symmetric, meaning that the relations are undirected, i.e. Bob is friends with\nAnn and Ann is friends with Bob. In general, $A[i,j]=1$, if there is a relation between $i$ and $j$.\nIf $A[i,j]=1$ does not imply $A[j,i]=1$ then $A$ defines a directed network.\n\nOnce we have defined an edgelist or an adjacency matrix, we can turn them into `igraph` objects as follows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng1 <- graph_from_adjacency_matrix(A, mode = \"undirected\", diag = FALSE)\n\ng2 <- graph_from_edgelist(el, directed = FALSE)\n# g1 and g2 are the same graph so only printing g1\ng1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIGRAPH 344813b UN-- 3 3 -- \n+ attr: name (v/c)\n+ edges from 344813b (vertex names):\n[1] Bob--Ann   Bob--Steve Ann--Steve\n```\n\n\n:::\n:::\n\n\nThe printed summary shows some general descriptives of the graph.\nThe string \"UN--\" in the first line indicates that the network is *U*ndirected (*D* for directed graphs) and has a *N*ame attribute (we named the nodes Bob, Ann, and Steve). The third and forth character are *W*, if there is a edge weight attribute, and *B* if the network is bipartite (there exists a node attribute \"type\"). The following number indicate the number of nodes and edges.\nThe second line lists all graph, node and edge variables. Here, we only have a node attribute \"name\". \n\nThe conversion from edgelist/adjacency matrix into an igraph object is quite straightforward. The only difficulty is setting the parameters correctly (Is the network directed or not?), especially for edgelists where it may not immediately be obvious if the network is directed or not.\n\nIn the following, we use a larger network to introduce some terminology.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"greys\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/plot_greys-1.png){width=1152}\n:::\n:::\n\n\nThe \"greys\" network is part of the `networkdata` package and consists of most characters from the show \"Grey's Anatomy\" and who hooked up with whom.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngreys\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIGRAPH f7716f1 UN-- 54 57 -- \n+ attr: name (v/c), sex (v/c), race (v/c), birthyear (v/n), position\n| (v/c), season (v/n), sign (v/c)\n+ edges from f7716f1 (vertex names):\n [1] Arizona Robbins--Leah Murphy     Alex Karev     --Leah Murphy    \n [3] Arizona Robbins--Lauren Boswell  Arizona Robbins--Callie Torres  \n [5] Erica Hahn     --Callie Torres   Alex Karev     --Callie Torres  \n [7] Mark Sloan     --Callie Torres   George O'Malley--Callie Torres  \n [9] Izzie Stevens  --George O'Malley Meredith Grey  --George O'Malley\n[11] Denny Duqutte  --Izzie Stevens   Izzie Stevens  --Alex Karev     \n[13] Derek Sheperd  --Meredith Grey   Preston Burke  --Cristina Yang  \n+ ... omitted several edges\n```\n\n\n:::\n:::\n\n\n## Simple Descriptive Statistics\n\nThe **density** of a network is defined as the fraction of the potential edges in a network that are actually present.\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\n    edge_density(make_empty_graph(10)),\n    edge_density(greys),\n    edge_density(make_full_graph(10))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0000000 0.0398323 1.0000000\n```\n\n\n:::\n:::\n\n\nThe density of an empty network is $0$ and for the full network it is $1$. The density of empirical network \nis somewhere in between but as the number of nodes increases, we'd expect the density to decrease and the network \nbecomes quite sparse.\n\nA **shortest path** is a path that connects two nodes in a network with a minimal number of edges. The length of a shortest path is called the **distance** between two nodes.\n\n::: {.cell}\n\n```{.r .cell-code}\nshortest_paths(greys,from = \"Alex Karev\",to = \"Owen Hunt\",output = \"vpath\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$vpath\n$vpath[[1]]\n+ 5/54 vertices, named, from f7716f1:\n[1] Alex Karev         Addison Montgomery Mark Sloan         Teddy Altman      \n[5] Owen Hunt         \n\n\n$epath\nNULL\n\n$predecessors\nNULL\n\n$inbound_edges\nNULL\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/greys_shortest_path-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndistances(greys)[1:10, 1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Addison Montgomery Adele Webber Teddy Altman Amelia Shepherd\nAddison Montgomery                  0          Inf            2               2\nAdele Webber                      Inf            0          Inf             Inf\nTeddy Altman                        2          Inf            0               2\nAmelia Shepherd                     2          Inf            2               0\nArizona Robbins                     3          Inf            3               3\nRebecca Pope                        2          Inf            4               4\nJackson Avery                       3          Inf            3               3\nMiranda Bailey                    Inf          Inf          Inf             Inf\nBen Warren                        Inf          Inf          Inf             Inf\nHenry Burton                        3          Inf            1               3\n                   Arizona Robbins Rebecca Pope Jackson Avery Miranda Bailey\nAddison Montgomery               3            2             3            Inf\nAdele Webber                   Inf          Inf           Inf            Inf\nTeddy Altman                     3            4             3            Inf\nAmelia Shepherd                  3            4             3            Inf\nArizona Robbins                  0            3             4            Inf\nRebecca Pope                     3            0             3            Inf\nJackson Avery                    4            3             0            Inf\nMiranda Bailey                 Inf          Inf           Inf              0\nBen Warren                     Inf          Inf           Inf              1\nHenry Burton                     4            5             4            Inf\n                   Ben Warren Henry Burton\nAddison Montgomery        Inf            3\nAdele Webber              Inf          Inf\nTeddy Altman              Inf            1\nAmelia Shepherd           Inf            3\nArizona Robbins           Inf            4\nRebecca Pope              Inf            5\nJackson Avery             Inf            4\nMiranda Bailey              1          Inf\nBen Warren                  0          Inf\nHenry Burton              Inf            0\n```\n\n\n:::\n:::\n\n\nThe Grey's Anatomy network is **disconnected** and consists of $4$ **connected components**. There are no \nshortest paths between components, which means that the distance is not measurable and set to infinity.\n\nThe length of the longest shortest path is called the **diameter** of the network.\n\n::: {.cell}\n\n```{.r .cell-code}\ndiameter(greys)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/greys_diameter-1.png){width=1152}\n:::\n:::\n\n\n\n**Transitivity** measures the probability that the neighbors of a node are also connected. This is also called the **clustering coefficient**.  \n\n::: {.cell}\n\n```{.r .cell-code}\ntransitivity(greys, type = \"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\ntransitivity(greys, type = \"local\", isolates = \"zero\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[39] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n```\n\n\n:::\n:::\n\nThe global transitivity of an undirected network is the ratio of the triangles and the connected triples in the network.\nLocal transitivity of a node is the ratio of the triangles connected to the node and the triples centered on the node itself.\nIn social networks, we generally assume that the transitivity is quite high (\"the friend of my friend is also my friend\"). In our \nexample, we have zero for all values. This is due to the fact that a triangle would require a same sex hook-up which did not occur (*Disclaimer: I never watched the show and gathered the hook ups from various internet resources. So this may well be wrong.*).\n\nFor directed networks, a measure of importance is **reciprocity**, which is defined as the proportion of mutual edges between nodes. To illustrate the measure, we use a network of grooming relations among a group of rhesus monkeys.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"rhesus\")\nreciprocity(rhesus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.756757\n```\n\n\n:::\n:::\n\n\nAbout 76% of edges are reciprocated in the network. The figure below highlights the reciprocated edges. \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/rhesus_net-1.png){width=672}\n:::\n:::\n\n\n## Triad Census\n\nIn a directed network, there are 16 possible configurations of edges that can occur between three nodes. \n![](assets/img/triad_census.jpg)\n\nThe **triad census** of a network gives the number of occurrences of each of these triad. Triads are labelled `xyzL` where `x` is the number of reciprocated ties, `y` is the number of unreciprocated ties and `z` is the number of null ties. The `L` term is a letter (U,C,D or T) which allows to differentiate between triads where these numbers are the same. \n\nOne of the many applications of the triad census is to compare a set of networks. In this example, we are tackling the question of \"how transitive is football?\" and assess structural differences among a set of football leagues. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"football_triad\")\n```\n:::\n\n\n`football_triad` is a list which contains networks of 112 football leagues as igraph objects. A directed link between\nteam A and B indicates that A won a match against B. Note that there can also be an edge from B to A,\nsince most leagues play a double round robin. For the sake of simplicity, all draws were deleted so that\nthere could also be null ties between two teams if both games ended in a draw.\n\nBelow, we calculate the triad census for all network at once using `lapply()`.\nThe function returns the triad census for each network as a list, which we turn into a matrix\nin the second step. Afterwards, we manually add the row and column names of the matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfooty_census <- lapply(football_triad, triad_census)\nfooty_census <- matrix(unlist(footy_census), ncol = 16, byrow = T)\nrownames(footy_census) <- sapply(football_triad, function(x) x$name)\ncolnames(footy_census) <- c(\n    \"003\", \"012\", \"102\", \"021D\", \"021U\", \"021C\", \"111D\", \"111U\",\n    \"030T\", \"030C\", \"201\", \"120D\", \"120U\", \"120C\", \"210\", \"300\"\n)\n\n# normalize to make proportions comparable across leagues\nfooty_census_norm <- footy_census / rowSums(footy_census)\n\n# check the Top 5 leagues\nidx <- which(rownames(footy_census) %in% c(\n    \"england\", \"spain\", \"germany\",\n    \"italy\", \"france\"\n))\nfooty_census[idx, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        003 012 102 021D 021U 021C 111D 111U 030T 030C 201 120D 120U 120C 210\nengland   2  10   0   58   31   40   34   44  338   29  19  118  129  143 131\nfrance    1  23   5   30   33   44   48   40  332   41  16  132  108  160 114\ngermany   0  21   6   27   19   49   38   46  165   16  23   77   79  117 120\nitaly     1   4   2   35   43   30   30   22  419   38   5  164  116  118  99\nspain     0   8   4   27   42   45   32   35  364   43  11  126  105  148 130\n        300\nengland  14\nfrance   13\ngermany  13\nitaly    14\nspain    20\n```\n\n\n:::\n:::\n\n\nNotice how the transitive triad (030T) has the largest count in the top leagues, hinting toward the childhood wisdom:\n\"If A wins against B and B wins against C, then A must win against C\".\n\nIn empirical studies, we are not necessarily only interested in transitive triads, but rather how the triad census profiles compare across networks. We follow [Kathrine Faust's](https://doi.org/10.1111%2Fj.1467-9531.2007.00179.x) suggestion and do a singular value decomposition (SVD) on the normalized triad census matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfooty_svd <- svd(footy_census_norm)\n```\n:::\n\n\nSVDs are used to reduce the dimensionality of the data, but retaining most of the information. In our case, the \ndata is 16 dimensional, which is impossible to visualize to compare the networks. With an SVD, we can reduce it to two dimensions and get a better visual overview.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ggrepel: 35 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/plot_svd_u-1.png){width=1152}\n:::\n:::\n\n\nHow to interpret the dimensions? To investigate this question, we take a closer look at the first two dimensions and compare it to some network descriptives. For the sake of brevity, we here only look at the density and proportion of 030T triads. In\ngeneral, any node/dyad/triad level statistic could be used.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/svd1_density-1.png){width=1152}\n:::\n:::\n\n\nDensity doesn't really seem to be related to the first dimension in this case (in many cases it is!). Might be worthwhile to\nexplore this further\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](descriptives-basic_files/figure-html/svd2_030T-1.png){width=1152}\n:::\n:::\n\n\nFor the second dimension, we get a clearer association. It seems that the fraction of transitive triads \nis a good indicator for structural differences among leagues.",
    "supporting": [
      "descriptives-basic_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}