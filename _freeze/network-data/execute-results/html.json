{
  "hash": "ac826ff95d09fcfa7939fd4c8dc153dd",
  "result": {
    "engine": "knitr",
    "markdown": "# Network Data {.unnumbered}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\n```\n:::\n\n\n## Basic Network Notation using `igraph`\n\nNetworks are commonly represented with an **adjacency matrix** or via an **edgelist**. If you are interested \nBelow, we represent friendship relations between Bob, Ann, and Steve as a matrix and an edgelist.\n\n::: {.cell}\n\n```{.r .cell-code}\n# adjacency matrix\nA <- matrix(\n    c(0, 1, 1, 1, 0, 1, 1, 1, 0),\n    nrow = 3, ncol = 3, byrow = TRUE\n)\n\nrownames(A) <- colnames(A) <- c(\"Bob\", \"Ann\", \"Steve\")\nA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Bob Ann Steve\nBob     0   1     1\nAnn     1   0     1\nSteve   1   1     0\n```\n\n\n:::\n\n```{.r .cell-code}\n# edgelist\nel <- matrix(c(\"Bob\", \"Ann\", \"Bob\", \"Steve\", \"Ann\", \"Steve\"),\n    nrow = 3, ncol = 2, byrow = TRUE\n)\nel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1]  [,2]   \n[1,] \"Bob\" \"Ann\"  \n[2,] \"Bob\" \"Steve\"\n[3,] \"Ann\" \"Steve\"\n```\n\n\n:::\n:::\n\n\nThe adjacency matrix $A$ is symmetric, meaning that the relations are undirected, i.e. Bob is friends with\nAnn and Ann is friends with Bob. In general, $A[i,j]=1$, if there is a relation between $i$ and $j$.\nIf $A[i,j]=1$ does not imply $A[j,i]=1$ then $A$ defines a directed network.\n\nOnce we have defined an edgelist or an adjacency matrix, we can turn them into `igraph` objects as follows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng1 <- graph_from_adjacency_matrix(A, mode = \"undirected\", diag = FALSE)\n\ng2 <- graph_from_edgelist(el, directed = FALSE)\n# g1 and g2 are the same graph so only printing g1\ng1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIGRAPH abe9708 UN-- 3 3 -- \n+ attr: name (v/c)\n+ edges from abe9708 (vertex names):\n[1] Bob--Ann   Bob--Steve Ann--Steve\n```\n\n\n:::\n:::\n\n\nThe printed summary shows some general descriptives of the graph.\nThe string \"UN--\" in the first line indicates that the network is *U*ndirected (*D* for directed graphs) and has a *N*ame attribute (we named the nodes Bob, Ann, and Steve). The third and forth character are *W*, if there is a edge weight attribute, and *B* if the network is bipartite (there exists a node attribute \"type\"). The following number indicate the number of nodes and edges.\nThe second line lists all graph, node and edge variables. Here, we only have a node attribute \"name\". \n\nThe conversion from edgelist/adjacency matrix into an igraph object is quite straightforward. The only difficulty is setting the parameters correctly (Is the network directed or not?), especially for edgelists where it may not immediately be obvious if the network is directed or not.\n\n## Importing Network Data\n\n### Nodes and Ties\n\n### Attributes\n\n### Using `snahelper`\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}