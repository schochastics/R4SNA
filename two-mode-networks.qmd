# Two-Mode Networks

```{r}
#| label: libraries
#| message: false
library(igraph)
library(backbone)
library(networkdata)
```


```{r}
#| label: libraries-silent
#| include: false
library(ggraph)
```

A two-mode network is a network that consists of two disjoint sets of nodes (like people and events). Ties connect the two sets, e. g. participation of people in events. There exists a great variet of two mode networks. The most often encountered ones are 

- Affiliation networks (Membership in institutions/clubs)
- Voting/Sponsorship networks (politicians and bills)
- Citation network (authors and papers)
- Co-Authorship networks (authors and papers)

Below we will discuss some methods via the famous "southern women" dataset consisting of
18 women who attended a series of 14 events.
```{r}
#| label: southern-dat-load
data("southern_women")
southern_women
```

```{r}
#| label: two-mode-type
table(V(southern_women)$type)
```

```{r}
#| label: southern-women-plot
#| echo: false
ggraph(southern_women, "stress")+
    geom_edge_link(edge_color = "grey66")+
    geom_node_point(aes(fill = type, shape = type), size = 8, show.legend = FALSE)+
    geom_node_text(aes(label = name))+
    scale_shape_manual(values = c(21,22))+
    theme_void()
```

The adjacency matrix of a two mode network is also referred to as an incidence matrix and can be obtained via `as biadjacency_matrix()`.

```{r}
#| label: incidence_southern
A <- as_biadjacency_matrix(southern_women)
A
```

The `tnet` ([link](https://CRAN.R-project.org/package=tnet)) and `bipartite` ([link](https://CRAN.R-project.org/package=bipartite)) offer some methods to analyse two mode networks directly, by  adapting tools for standard (one-mode) networks (like the ones described in previous sections).

## Bipartite Projections
Besides analyzing a two-mode network as-is, there is also the possibility to project it to one mode. 
Mathematically, this is done by calculating $AA^T$ or $A^TA$, depending which mode we project on.
As an example, consider the southern women dataset again.
```{r}
#| label: proj-women
B <- A%*%t(A)
B
```

This matrix can now be interpreted as a weighted network among the 18 women. Each entry corresponds to the number of times two women went to the same event.

```{r}
#| label: proj-women_direct
bipartite_projection(southern_women)
```

```{r}
#| label: plot_weighted_proj
#| echo: FALSE
proj <- graph_from_adjacency_matrix(B,weighted = TRUE,diag = FALSE,mode = "undirected")

ggraph(proj,"stress")+
  geom_edge_link(aes(edge_linewidth=weight),edge_color="grey66",show.legend = FALSE)+
  geom_node_point(shape=21,fill="grey66",size=8,show.legend = FALSE)+
  geom_node_text(aes(label=name))+
  scale_edge_width(range = c(1,4))+
  theme_void()+
  coord_cartesian(clip = "off")

```

As you can see, the network has become very dense. A very common step is now to binarize the
network. In doing so, we basically turn the network into a simple undirected one-mode network. This makes all methods we described in the first few sections applicable to the network (at least in theory).

The simplest way of binarizing a weighted projection is to define a global threshold and remove a tie if its weight is below the global threshold. This is simple but come with many undesirable structural problems. More sophisticated tools work with statistical models in the background which determine if an edge weight differs enough from the expected value. If so, the edge is kept in the binary "backbone" of the network. 

All possible backbone extraction methods are implemented in the `backbone` package ([link](https://CRAN.R-project.org/package=backbone)). An introduction to the package can be
found on [arxiv](https://arxiv.org/abs/1912.12779).
